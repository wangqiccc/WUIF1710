    //push（）
    //参数：在数组的末尾添加一个或者多个数组
    //返回值是值得长度
    //    var arr = [];
    //    var r = arr.push(12, 1, 2, "asda");
    //    console.log(arr);    //【12, 1, 2, "asda"】
    //pop（）
    //参数：删掉数组的最后一个元素
    //返回值是删掉的值
    //    var arr=[1,2,3]
    //     var o = arr.pop();
    //    console.log(arr);//【1，2】
    //unshift()
    //参数：在数组开始的位置添加一个或多个数组
    //返回值是新数组
    //        var arr=[10,2,4]
    //          arr.unshift(10, "asd");
    //            console.log(arr);   //[10,"asd"]
    //shift()
    //参数:在数组的开始位置删除一个元素
    //返回值:删除的元素
    //    var arr = [1, 2, 3]
    //    arr.shift();
    //    console.log(arr);   //[2,3]
    //splice
    //参数:第一个参数 操作位置  第二个参数 要删除的个数   后续参数 表示要添加的内容
    //作用:万能的添加删除方法
    //返回值是删掉的值组成的数组
    //    var arr=[1,2,3,4,5,6]
    //    arr.splice(0,1,2)
    //    console.log(arr)        [2, 2, 3, 4, 5, 6]
    //join
    //作用:将数组转化为字符串
    //    var arr=[1,2,3]
    //    var num=arr.join("--")
    //    console.log(num)    //1--2--3
    //concat()
    //作用:将多个数组合并成一个 对于原数组没有任何影响
    //    var arr1=[1,2,3];
    //    var arr2=[4,5,6];
    //    var newarr=arr1.concat(arr2);
    //    console.log(newarr);    [1, 2, 3, 4, 5, 6]
    //slice
    //作用: 从数组中截取指定的内容返回，不会影响原数组。
    //    var  newarr=[1,2,3,4]
    //    var arr3=newarr.slice(1);
    //    console.log(arr3);  [2, 3, 4]
    //sort
    //作用:实现数组排序的功能 会影响数组本身
    //    var arr = [11, 9, 8, 3, 4, 66, 7];
    //    var r = arr.sort(function (a, b) {
    //        if (a > b) {
    //            return 1;
    //        } else if (a < b) {
    //            return -1
    //        }
    //    })
    //    console.log(arr);    [3, 4, 7, 8, 9, 11, 66]
    //forEach
    //作用:遍历
    //    var arr = [
    //        {age: 8},
    //        {age: 15},
    //        {age: 4}
    //    ]
    //
    //    arr.forEach(function (z) {
    //        console.log(z)
    //    })          {age: 8}       {age: 15}       {age: 4}
    //map
    //作用:映射
    //    var arr=[1,2,3,4,5];
    //     var newarr=arr.map(function (v,i) {
    //           return v**2;
    //
    //     });
    //     console.log(newarr);    [1, 4, 9, 16, 25]

    //filter
    //作用:过滤
    //    var num=[63,54,98,98]
    //    num77=num.filter(function (i ) {
    //        if (i>60){
    //            return  true
    //        }
    //    })
    //    console.log(num77)            [63, 98, 98]


    //some
    //某一个
    //        var arr=[50,61,7,58,96,88];
    //    var newarr=arr.some(function (v) {
    //        if(v>90){
    //            return true;
    //        }
    //    })
    //     console.log(newarr)    true
    //
    // every();
    // 作用:每一个些是否满足条件，满足则为真
    //    var arr=[50,61,7,58,96,88];
    //    var newarr=arr.every(function (v) {
    //        if(v>90){
    //            return false;
    //        }
    //    })
    //    console.log(newarr);//false
    //indexOf
    //作用:获取数值中某个值的第一个下标
    //    var num=[1,23,4,5,7,8]
    //    console.log(num.indexOf(1))      0

    //lastIndexOf
    //作用:获取数值中某个值的第一个下标
    //        var num=[1,23,4,5,7,8]
    //        console.log(num.lastIndexOf(4))    2
    //reverse
    //作用:将数组中的内容反向展示
    //    arr=[1,2,3]
    //    arr.reverse();
    //    console.log(arr);//[3,2,1]
    //  // reduce
    // 作用:累加
    //    var arr=[1,2,3,4,5];
    //    var num=arr.reduce(function (a,b) {
    //        return a+b;
    //    });
    //    console.log(num);//15
    //find
    //作用:根据我们设置的条件进行查找如果有满组条件就把值返回
    //    var arr=[1,4,5,6]
    //    var r=arr.find(function (v,r) {
    //        if(v===5){
    //            return v
    //
    //        }
    //    })
    //    console.log(r)   5
    //findIndex
    //作用:返回的是位置
    //        var arr=[1,4,5,6]
    //        var r=arr.findIndex(function (v,r) {
    //            if(v==5){
    //                return v
    //
    //            }
    //        })
    //        console.log(r)    2
    //fill
    //作用:对数组进行填充 把数组中的空值填为某个值
    //    var arr=new Array(10);
    //    arr.fill(1);
    //    console.log(arr);//[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    // copyWithin();
    // 作用：用数组的某一部分替换掉另一部分
    //    var arr=[1,2,3,4,5];
    //    arr.copyWithin(1,2);
    //    console.log(arr);// [1, 3, 4, 5, 5]
    // //includes();
    // 作用：用来判断数组当中是否包含某个值的方法
    //    var arr=[1,2,3,4,5];
    //    console.log(arr.includes(3));//true
    //Array.from
    //把一个类数组转换为一个真正的数组
    //    function fn() {
    //        console.log(Array.from(arguments))
    //    }
    //    fn(1,2,3,4,5);//[1, 2, 3, 4, 5]
    // Array.isArray()判断某一个变量是否是一个数组
    //    var arr=[1,2,3,4,5];
    //    console.log(Array.isArray(1));//false
    //Array.of
    //创建一个具有可变数量参数的新类数组实列而不考虑参数的数量或类型
    //    var arr=new Array(5,6,7);
    //    var arr=Array.of(5,6,7);
    //    console.log(arr);//[5, 6, 7]
